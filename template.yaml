AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  banana-plantation-api

  Sample SAM Template for banana-plantation-api

Globals:
  Function:
    Timeout: 3
    LoggingConfig:
      LogFormat: JSON

Resources:
  BananaPlantationApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: 'BananaPlantationApi'
      Description: 'API for Banana Plantation'
      StageName: prod

  BananaPlantationFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: dist/position/
      Handler: app.handler
      Runtime: nodejs20.x
      Architectures:
        - x86_64
      Events:
        BananaPlantationApi:
          Type: Api
          Properties:
            Path: /position
            Method: post
            RestApiId: !Ref BananaPlantationApi

  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0

  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'

Outputs:
  BananaPlantationApi:
    Description: API Gateway endpoint URL for Prod stage for Banana Plantation function
    Value: !Sub 'https://${BananaPlantationApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/position/'

  BananaPlantationFunction:
    Description: Banana Plantation Lambda Function ARN
    Value: !GetAtt BananaPlantationFunction.Arn

  BananaPlantationFunctionIamRole:
    Description: Implicit IAM Role created for Banana Plantation function
    Value: !GetAtt BananaPlantationFunctionRole.Arn
